version: '3.4'

services:
  catalog.api:
    image: ${DOCKER_REGISTRY-}catalogapi
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    ports:
      - "5001:80"
    container_name: Catalog-API
    depends_on:
      - mongoProduct

  mongoProduct:
    image: mongo:latest
    ports:
      - "27018:27017"
    restart: always
 
    container_name: mongodProducts
    volumes: 
     - "./mongo-db-data:/data/db"

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8082:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      #ME_CONFIG_MONGODB_URL: mongodb://root:root@mongoProduct:27017/
      ME_CONFIG_MONGODB_URL: mongodb://mongoProduct:27017/  # can add auth lator


    container_name: product-mongo


  basket.api:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    ports:
      - "5002:80"
    container_name: Basket-API
      
    depends_on:
       - basket-cache

  basket-cache:
    image: "redis"
    # command: redis-server --save 20 1 --loglevel warning --requirepass RediIsLocalYo!
    ports:
     - "6380:6379" 
    container_name: basketRedisCache
    volumes: 
      - "./Redis-data:/data"
    restart: always


  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "8080:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

    

  discount.api:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: Services/Discount/Discount.API/Dockerfile
    ports:
      - "5003:80"
    depends_on:
      - dic-gress
    container_name: Discount-API


  dic-gress:
    image: postgres
    environment:
      - POSTGRES_USER=admin # ${from .env in the future}
      - POSTGRES_PASSWORD=admin1234
    restart: always
    ports:
        - "5434:5432"
    volumes:
      - ./postgres_db-data:/var/lib/postgresql/data/
    container_name: Discount-PostgresDB


  discount.grpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: Services/Discount/Discount.gRPC/Dockerfile
    ports:
      - "5004:80"
    container_name: Discount-GRPC
    depends_on:
      - dic-gress




  sqlServerOrderingDB:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      SA_PASSWORD: "DiLb984ImW"
      ACCEPT_EULA: "Y"
    ports:
     - "1435:1433"
    container_name: Ordering-Database
    volumes:
      - "./SqlServer-db-data:/var/opt/mssql/data"
    restart: always


volumes:
  mongo-db-data:
  Redis-data: 
  portainer_data:
  postgres_db-data:
  SqlServer-db-data:

